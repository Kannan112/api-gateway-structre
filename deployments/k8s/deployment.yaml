apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: default
  labels:
    app: api-gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: api-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: api-gateway
        image: api-gateway:latest # Replace with your image repository
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
        - name: grpc
          containerPort: 9090
        env:
        - name: ENV
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: ENV
        - name: AUTH_SERVICE_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: AUTH_SERVICE_ADDRESS
        - name: USER_SERVICE_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: USER_SERVICE_ADDRESS
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-config
data:
  ENV: production
  AUTH_SERVICE_ADDRESS: auth-service:50051
  USER_SERVICE_ADDRESS: user-service:50052
