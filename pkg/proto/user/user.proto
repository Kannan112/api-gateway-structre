syntax = "proto3";

package user;

option go_package = "fluxor-api-gateway/pkg/proto/user";

import "google/protobuf/timestamp.proto";

// User service definition
service UserService {
  // Create a new user
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
  
  // Get user details
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
  
  // Update existing user
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
  
  // Delete user
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
  
  // List users with pagination
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {}
}

// User message represents user data
message User {
  string id = 1;
  string username = 2;
  string email = 3;
  string first_name = 4;
  string last_name = 5;
  string phone_number = 6;
  UserStatus status = 7;
  repeated string roles = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
}

// User status enumeration
enum UserStatus {
  USER_STATUS_UNSPECIFIED = 0;
  USER_STATUS_ACTIVE = 1;
  USER_STATUS_INACTIVE = 2;
  USER_STATUS_SUSPENDED = 3;
}

// Request to create a new user
message CreateUserRequest {
  User user = 1;
  string password = 2;
}

// Response after creating a user
message CreateUserResponse {
  User user = 1;
}

// Request to get user details
message GetUserRequest {
  string user_id = 1;
}

// Response containing user details
message GetUserResponse {
  User user = 1;
}

// Request to update user information
message UpdateUserRequest {
  User user = 1;
  // Optional password update
  optional string new_password = 2;
}

// Response after updating user
message UpdateUserResponse {
  User user = 1;
}

// Request to delete a user
message DeleteUserRequest {
  string user_id = 1;
}

// Response after deleting user
message DeleteUserResponse {
  bool success = 1;
}

// Request to list users with pagination
message ListUsersRequest {
  int32 page_size = 1;
  string page_token = 2;
  // Optional filters
  optional UserStatus status = 3;
  optional string search = 4;
}

// Response containing list of users
message ListUsersResponse {
  repeated User users = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}